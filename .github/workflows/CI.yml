name: CI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-release:
    name: build-release
    runs-on: ${{ matrix.os }}
    env:
      NAME: bili-live
      CARGO: cargo
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Setup ARM toolchain
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        rustup target add aarch64-unknown-linux-gnu
        curl -o $GITHUB_WORKSPACE/aarch64.tar.xz https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz
        tar xf $GITHUB_WORKSPACE/aarch64.tar.xz
        echo "$GITHUB_WORKSPACE/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin" >> $GITHUB_PATH

    - name: Build release binary
      shell: bash
      run: |
        ${{ env.CARGO }} build --release --target=${{ matrix.target }}
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/${{ env.NAME }}.exe target/${{ matrix.target }}/release/${{ env.NAME }}-${{ matrix.target }}.exe
        else
          cp target/${{ matrix.target }}/release/${{ env.NAME }} target/${{ matrix.target }}/release/${{ env.NAME }}-${{ matrix.target }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.NAME }}-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ env.NAME }}-*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-release]
    env:
      NAME: bili-live
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: '${{ env.NAME }}-*/${{ env.NAME }}-*'
